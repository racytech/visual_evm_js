import { BlockHeader, Transaction } from "../lib/types";
import { Contract } from "./contract";
import * as exec_funcs from "./exec_funcs";
import { Memory, memoryMStore } from "./memory";
import { Stack } from "./stack";

export enum OPCODES {
    // 0x0 range - arithmetic ops.
    STOP = 0x0,
    ADD,
    MUL,
    SUB,
    DIV,
    SDIV,
    MOD,
    SMOD,
    ADDMOD,
    MULMOD,
    EXP,
    SIGNEXTEND,

    // 0x10 range - comparison ops.
    LT = 0x10,
    GT,
    SLT,
    SGT,
    EQ,
    ISZERO,
    AND,
    OR,
    XOR,
    NOT,
    BYTE,
    SHL,
    SHR,
    SAR,

    SHA3 = 0x20,

    // 0x30 range - closure state.
    ADDRESS = 0x30,
    BALANCE,
    ORIGIN,
    CALLER,
    CALLVALUE,
    CALLDATALOAD,
    CALLDATASIZE,
    CALLDATACOPY,
    CODESIZE,
    CODECOPY,
    GASPRICE,
    EXTCODESIZE,
    EXTCODECOPY,
    RETURNDATASIZE,
    RETURNDATACOPY,
    EXTCODEHASH,

    // 0x40 range - block operations.
    BLOCKHASH = 0x40,
    COINBASE,
    TIMESTAMP,
    NUMBER,
    DIFFICULTY,
    GASLIMIT,

    CHAINID = 0x46,
    SELFBALANCE,
    BASEFEE,

    // 0x50 range - 'storage' and execution.
    POP = 0x50,
    MLOAD,
    MSTORE,
    MSTORE8,
    SLOAD,
    SSTORE,
    JUMP,
    JUMPI,
    PC,
    MSIZE,
    GAS,
    JUMPDEST,

    // 0x60 range.
    PUSH1 = 0x60,
    PUSH2,
    PUSH3,
    PUSH4,
    PUSH5,
    PUSH6,
    PUSH7,
    PUSH8,
    PUSH9,
    PUSH10,
    PUSH11,
    PUSH12,
    PUSH13,
    PUSH14,
    PUSH15,
    PUSH16,
    PUSH17,
    PUSH18,
    PUSH19,
    PUSH20,
    PUSH21,
    PUSH22,
    PUSH23,
    PUSH24,
    PUSH25,
    PUSH26,
    PUSH27,
    PUSH28,
    PUSH29,
    PUSH30,
    PUSH31,
    PUSH32,
    DUP1,
    DUP2,
    DUP3,
    DUP4,
    DUP5,
    DUP6,
    DUP7,
    DUP8,
    DUP9,
    DUP10,
    DUP11,
    DUP12,
    DUP13,
    DUP14,
    DUP15,
    DUP16,
    SWAP1,
    SWAP2,
    SWAP3,
    SWAP4,
    SWAP5,
    SWAP6,
    SWAP7,
    SWAP8,
    SWAP9,
    SWAP10,
    SWAP11,
    SWAP12,
    SWAP13,
    SWAP14,
    SWAP15,
    SWAP16,

    // 0xa0 range - logging ops.
    LOG0 = 0xa0,
    LOG1,
    LOG2,
    LOG3,
    LOG4,

    // 0xf0 range - System operations.
    CREATE = 0xf0,
    CALL,
    CALLCODE,
    RETURN,
    DELEGATECALL,
    CREATE2,
    STATICCALL = 0xfa,
    REVERT = 0xfd,
    INVALID = 0xFE,
    SELFDESTRUCT = 0xff,
}


type _exec_func = (pc: number, stack: Stack, memory: Memory, contract: Contract, blockHeader: BlockHeader, byteCode: number[]) => Promise<number>;

type _mem_func = (stack: Stack) => [number, boolean, string]; // 

interface instruction {
    name: string;
    description: string;

    num_pops: number;
    num_pushes: number;

    exec_func: _exec_func;
    mem_func?: _mem_func;

    halts?: boolean;
    reverts?: boolean;
    returns?: boolean;
    reads?: boolean;
    writes?: boolean;
    jumps?: boolean;
    new_frame?: boolean; // if instruction creates new execution frame

    extra?: any;
}

interface instructions { [key: number]: instruction }

export const INSTRUCTIONS: instructions = {
    // 0x0 range - arithmetic ops.
    [OPCODES.STOP]: {
        name: "STOP",
        description: "Halts execution",
        exec_func: exec_funcs.STOP,
        num_pops: 0,
        num_pushes: 0,

        halts: true,
    },
    [OPCODES.ADD]: {
        name: "ADD",
        description: "Addition operation",
        exec_func: exec_funcs.ADD,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.MUL]: {
        name: "MUL",
        description: "Multiplication operation",
        exec_func: exec_funcs.MUL,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.SUB]: {
        name: "SUB",
        description: "Subtraction operation",
        exec_func: exec_funcs.SUB,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.DIV]: {
        name: "DIV",
        description: "Integer division operation",
        exec_func: exec_funcs.DIV,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.SDIV]: {
        name: "SDIV",
        description: "Signed integer division operation (truncated)",
        exec_func: exec_funcs.SDIV,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.MOD]: {
        name: "MOD",
        description: "Modulo remainder operation",
        exec_func: exec_funcs.MOD,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.SMOD]: {
        name: "SMOD",
        description: "Signed modulo remainder operation",
        exec_func: exec_funcs.SMOD,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.ADDMOD]: {
        name: "ADDMOD",
        description: "Modulo addition operation",
        exec_func: exec_funcs.ADDMOD,
        num_pops: 3,
        num_pushes: 1,
    },
    [OPCODES.MULMOD]: {
        name: "MULMOD",
        description: "Modulo multiplication operation",
        exec_func: exec_funcs.MULMOD,
        num_pops: 3,
        num_pushes: 1,
    },
    [OPCODES.EXP]: {
        name: "EXP",
        description: "Exponential operation",
        exec_func: exec_funcs.EXP,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.SIGNEXTEND]: {
        name: "SIGNEXTEND",
        description: "Extend length of two's complement signed integer",
        exec_func: exec_funcs.SIGNEXTEND,
        num_pops: 2,
        num_pushes: 1,
    },

    // 0x10 range - comparison ops.
    [OPCODES.LT]: {
        name: "LT",
        description: "Less-than comparison",
        exec_func: exec_funcs.LT,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.GT]: {
        name: "GT",
        description: "Greater-than comparison",
        exec_func: exec_funcs.GT,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.SLT]: {
        name: "SLT",
        description: "Signed less-than comparison",
        exec_func: exec_funcs.SLT,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.SGT]: {
        name: "SGT",
        description: "Signed greater-than comparison",
        exec_func: exec_funcs.SGT,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.EQ]: {
        name: "EQ",
        description: "Equality comparison",
        exec_func: exec_funcs.EQ,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.ISZERO]: {
        name: "ISZERO",
        description: "Simple not operator",
        exec_func: exec_funcs.ISZERO,
        num_pops: 1,
        num_pushes: 1,
    },
    [OPCODES.AND]: {
        name: "AND",
        description: "Bitwise AND operation",
        exec_func: exec_funcs.AND,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.OR]: {
        name: "OR",
        description: "Bitwise OR operation",
        exec_func: exec_funcs.OR,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.XOR]: {
        name: "XOR",
        description: "Bitwise XOR operation",
        exec_func: exec_funcs.XOR,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.NOT]: {
        name: "NOT",
        description: "Bitwise NOT operation",
        exec_func: exec_funcs.NOT,
        num_pops: 1,
        num_pushes: 1,
    },
    [OPCODES.BYTE]: {
        name: "BYTE",
        description: "Retrieve single byte from word",
        exec_func: exec_funcs.BYTE,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.SHL]: {
        name: "SHL",
        description: "Left shift operation",
        exec_func: exec_funcs.SHL,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.SHR]: {
        name: "SHR",
        description: "Logical right shift operation",
        exec_func: exec_funcs.SHR,
        num_pops: 2,
        num_pushes: 1,
    },
    [OPCODES.SAR]: {
        name: "SAR",
        description: "Arithmetic (signed) right shift operation",
        exec_func: exec_funcs.SAR,
        num_pops: 2,
        num_pushes: 1,
    },

    // 0x20 KECCAK256
    [OPCODES.SHA3]: {
        name: "SHA3",
        description: "Compute Keccak-256 hash",
        exec_func: exec_funcs.SHA3,
        num_pops: 2,
        num_pushes: 1,
    },

    // 0x30 range - closure state.
    [OPCODES.ADDRESS]: {
        name: "ADDRESS",
        description: "Get address of currently executing account",
        exec_func: exec_funcs.ADDRESS,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.BALANCE]: {
        name: "BALANCE",
        description: "Get balance of the given account",
        exec_func: exec_funcs.BALANCE,
        num_pops: 1,
        num_pushes: 1,
    },
    [OPCODES.ORIGIN]: {
        name: "ORIGIN",
        description: "Get execution origination address",
        exec_func: exec_funcs.ORIGIN,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.CALLER]: {
        name: "CALLER",
        description: "Get caller address",
        exec_func: exec_funcs.CALLER,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.CALLVALUE]: {
        name: "CALLVALUE",
        description: "Get deposited value by the instruction/transaction responsible for this execution",
        exec_func: exec_funcs.CALLVALUE,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.CALLDATALOAD]: {
        name: "CALLDATALOAD",
        description: "Get input data of current environment",
        exec_func: exec_funcs.CALLDATALOAD,
        num_pops: 1,
        num_pushes: 1,
    },
    [OPCODES.CALLDATASIZE]: {
        name: "CALLDATASIZE",
        description: "Get size of input data in current environment",
        exec_func: exec_funcs.CALLDATASIZE,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.CALLDATACOPY]: {
        name: "CALLDATACOPY",
        description: "Copy input data in current environment to memory",
        exec_func: exec_funcs.CALLDATACOPY,
        num_pops: 3,
        num_pushes: 0,
    },
    [OPCODES.CODESIZE]: {
        name: "CODESIZE",
        description: "Get size of code running in current environment",
        exec_func: exec_funcs.CODESIZE,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.CODECOPY]: {
        name: "CODECOPY",
        description: "Copy code running in current environment to memory",
        exec_func: exec_funcs.CODECOPY,
        num_pops: 3,
        num_pushes: 0,
    },
    [OPCODES.GASPRICE]: {
        name: "GASPRICE",
        description: "Get price of gas in current environment",
        exec_func: exec_funcs.GASPRICE,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.EXTCODESIZE]: {
        name: "EXTCODESIZE",
        description: "Get size of an account's code",
        exec_func: exec_funcs.EXTCODESIZE,
        num_pops: 1,
        num_pushes: 1,
    },
    [OPCODES.EXTCODECOPY]: {
        name: "EXTCODECOPY",
        description: "Copy an account's code to memory",
        exec_func: exec_funcs.EXTCODECOPY,
        num_pops: 4,
        num_pushes: 0,
    },
    [OPCODES.RETURNDATASIZE]: {
        name: "RETURNDATASIZE",
        description: "Get size of output data from the previous call from the current environment",
        exec_func: exec_funcs.RETURNDATASIZE,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.RETURNDATACOPY]: {
        name: "RETURNDATACOPY",
        description: "Copy output data from the previous call to memory",
        exec_func: exec_funcs.RETURNDATACOPY,
        num_pops: 3,
        num_pushes: 0,
    },
    [OPCODES.EXTCODEHASH]: {
        name: "EXTCODEHASH",
        description: "Get hash of an account's code",
        exec_func: exec_funcs.EXTCODEHASH,
        num_pops: 1,
        num_pushes: 1,
    },

    // 0x40 range - block operations.
    [OPCODES.BLOCKHASH]: {
        name: "BLOCKHASH",
        description: "Get the hash of one of the 256 most recent complete blocks",
        exec_func: exec_funcs.BLOCKHASH,
        num_pops: 1,
        num_pushes: 1,
    },
    [OPCODES.COINBASE]: {
        name: "COINBASE",
        description: "Get the current block's beneficiary address",
        exec_func: exec_funcs.COINBASE,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.TIMESTAMP]: {
        name: "TIMESTAMP",
        description: "Get the current block's timestamp",
        exec_func: exec_funcs.TIMESTAMP,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.NUMBER]: {
        name: "NUMBER",
        description: "Get the current block's number",
        exec_func: exec_funcs.NUMBER,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.DIFFICULTY]: {
        name: "DIFFICULTY",
        description: "Get the current block's difficulty",
        exec_func: exec_funcs.DIFFICULTY,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.GASLIMIT]: {
        name: "GASLIMIT",
        description: "Get the current block's gas limit",
        exec_func: exec_funcs.GASLIMIT,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.CHAINID]: {
        name: "CHAINID",
        description: "Get the chain ID",
        exec_func: exec_funcs.CHAINID,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.SELFBALANCE]: {
        name: "SELFBALANCE",
        description: "Get balance of currently executing account",
        exec_func: exec_funcs.SELFBALANCE,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.BASEFEE]: {
        name: "BASEFEE",
        description: "",
        exec_func: exec_funcs.BASEFEE,
        num_pops: 0,
        num_pushes: 1,
    },

    // 0x50 range - 'storage' and execution.
    [OPCODES.POP]: {
        name: "POP",
        description: "Remove item from stack",
        exec_func: exec_funcs.POP,
        num_pops: 1,
        num_pushes: 0,
    },
    [OPCODES.MLOAD]: {
        name: "MLOAD",
        description: "Load word from memory",
        exec_func: exec_funcs.MLOAD,
        num_pops: 1,
        num_pushes: 1,
    },
    [OPCODES.MSTORE]: {
        name: "MSTORE",
        description: "Save word to memory",
        exec_func: exec_funcs.MSTORE,
        num_pops: 2,
        num_pushes: 0,

        mem_func: memoryMStore,
    },
    [OPCODES.MSTORE8]: {
        name: "MSTORE8",
        description: "Save byte to memory",
        exec_func: exec_funcs.MSTORE8,
        num_pops: 2,
        num_pushes: 0,
    },
    [OPCODES.SLOAD]: {
        name: "SLOAD",
        description: "Load word from storage",
        exec_func: exec_funcs.SLOAD,
        num_pops: 1,
        num_pushes: 1,
    },
    [OPCODES.SSTORE]: {
        name: "SSTORE",
        description: "Save word to storage",
        exec_func: exec_funcs.SSTORE,
        num_pops: 2,
        num_pushes: 0,

        writes: true,
    },
    [OPCODES.JUMP]: {
        name: "JUMP",
        description: "Alter the program counter",
        exec_func: exec_funcs.JUMP,
        num_pops: 1,
        num_pushes: 0,

        jumps: true,
    },
    [OPCODES.JUMPI]: {
        name: "JUMPI",
        description: "Conditionally alter the program counter",
        exec_func: exec_funcs.JUMPI,
        num_pops: 2,
        num_pushes: 0,

        jumps: true,
    },
    [OPCODES.PC]: {
        name: "PC",
        description: "Get the value of the program counter prior to the increment corresponding to this instruction",
        exec_func: exec_funcs.PC,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.MSIZE]: {
        name: "MSIZE",
        description: "Get the size of active memory in bytes",
        exec_func: exec_funcs.MSIZE,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.GAS]: {
        name: "GAS",
        description: "Get the amount of available gas, including the corresponding reduction for the cost of this instruction",
        exec_func: exec_funcs.GAS,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.JUMPDEST]: {
        name: "JUMPDEST",
        description: "Mark a valid destination for jumps. This operation has no effect on machine state during execution",
        exec_func: exec_funcs.JUMPDEST,
        num_pops: 0,
        num_pushes: 0,
    },

    // 0x60 range.
    [OPCODES.PUSH1]: {
        name: "PUSH1",
        description: "Place 1 byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH2]: {
        name: "PUSH2",
        description: "Place 2-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH3]: {
        name: "PUSH3",
        description: "Place 3-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH4]: {
        name: "PUSH4",
        description: "Place 4-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH5]: {
        name: "PUSH5",
        description: "Place 5-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH6]: {
        name: "PUSH6",
        description: "Place 6-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH7]: {
        name: "PUSH7",
        description: "Place 7-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH8]: {
        name: "PUSH8",
        description: "Place 8-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH9]: {
        name: "PUSH9",
        description: "Place 9-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH10]: {
        name: "PUSH10",
        description: "Place 10-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH11]: {
        name: "PUSH11",
        description: "Place 11-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH12]: {
        name: "PUSH12",
        description: "Place 12-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH13]: {
        name: "PUSH13",
        description: "Place 13-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH14]: {
        name: "PUSH14",
        description: "Place 14-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH15]: {
        name: "PUSH15",
        description: "Place 15-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH16]: {
        name: "PUSH16",
        description: "Place 16-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH17]: {
        name: "PUSH17",
        description: "Place 17-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH18]: {
        name: "PUSH18",
        description: "Place 18-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH19]: {
        name: "PUSH19",
        description: "Place 19-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH20]: {
        name: "PUSH20",
        description: "Place 20-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH21]: {
        name: "PUSH21",
        description: "Place 21-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH22]: {
        name: "PUSH22",
        description: "Place 22-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH23]: {
        name: "PUSH23",
        description: "Place 23-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH24]: {
        name: "PUSH24",
        description: "Place 24-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH25]: {
        name: "PUSH25",
        description: "Place 25-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH26]: {
        name: "PUSH26",
        description: "Place 26-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH27]: {
        name: "PUSH27",
        description: "Place 27-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH28]: {
        name: "PUSH28",
        description: "Place 28-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH29]: {
        name: "PUSH29",
        description: "Place 29-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH30]: {
        name: "PUSH30",
        description: "Place 30-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH31]: {
        name: "PUSH31",
        description: "Place 31-byte item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.PUSH32]: {
        name: "PUSH32",
        description: "Place 32-byte (full word) item on stack",
        exec_func: exec_funcs.makePush,
        num_pops: 0,
        num_pushes: 1,
    },
    [OPCODES.DUP1]: {
        name: "DUP1",
        description: "Duplicate 1st stack item",
        exec_func: exec_funcs.makeDup(1),
        num_pops: 1,
        num_pushes: 2,
    },
    [OPCODES.DUP2]: {
        name: "DUP2",
        description: "Duplicate 2nd stack item",
        exec_func: exec_funcs.makeDup(2),
        num_pops: 2,
        num_pushes: 3,
    },
    [OPCODES.DUP3]: {
        name: "DUP3",
        description: "Duplicate 3d stack item",
        exec_func: exec_funcs.makeDup(3),
        num_pops: 3,
        num_pushes: 4,
    },
    [OPCODES.DUP4]: {
        name: "DUP4",
        description: "Duplicate 4th stack item",
        exec_func: exec_funcs.makeDup(4),
        num_pops: 4,
        num_pushes: 5,
    },
    [OPCODES.DUP5]: {
        name: "DUP5",
        description: "Duplicate 5th stack item",
        exec_func: exec_funcs.makeDup(5),
        num_pops: 5,
        num_pushes: 6,
    },
    [OPCODES.DUP6]: {
        name: "DUP6",
        description: "Duplicate 6th stack item",
        exec_func: exec_funcs.makeDup(6),
        num_pops: 6,
        num_pushes: 7,
    },
    [OPCODES.DUP7]: {
        name: "DUP7",
        description: "Duplicate 7th stack item",
        exec_func: exec_funcs.makeDup(7),
        num_pops: 7,
        num_pushes: 8,
    },
    [OPCODES.DUP8]: {
        name: "DUP8",
        description: "Duplicate 8th stack item",
        exec_func: exec_funcs.makeDup(8),
        num_pops: 8,
        num_pushes: 9,
    },
    [OPCODES.DUP9]: {
        name: "DUP9",
        description: "Duplicate 9th stack item",
        exec_func: exec_funcs.makeDup(9),
        num_pops: 9,
        num_pushes: 10,
    },
    [OPCODES.DUP10]: {
        name: "DUP10",
        description: "Duplicate 10th stack item",
        exec_func: exec_funcs.makeDup(10),
        num_pops: 10,
        num_pushes: 11,
    },
    [OPCODES.DUP11]: {
        name: "DUP11",
        description: "Duplicate 11th stack item",
        exec_func: exec_funcs.makeDup(11),
        num_pops: 11,
        num_pushes: 12,
    },
    [OPCODES.DUP12]: {
        name: "DUP12",
        description: "Duplicate 12th stack item",
        exec_func: exec_funcs.makeDup(12),
        num_pops: 12,
        num_pushes: 13,
    },
    [OPCODES.DUP13]: {
        name: "DUP13",
        description: "Duplicate 13th stack item",
        exec_func: exec_funcs.makeDup(13),
        num_pops: 13,
        num_pushes: 14,
    },
    [OPCODES.DUP14]: {
        name: "DUP14",
        description: "Duplicate 14th stack item",
        exec_func: exec_funcs.makeDup(14),
        num_pops: 14,
        num_pushes: 15,
    },
    [OPCODES.DUP15]: {
        name: "DUP15",
        description: "Duplicate 15th stack item",
        exec_func: exec_funcs.makeDup(15),
        num_pops: 15,
        num_pushes: 16,
    },
    [OPCODES.DUP16]: {
        name: "DUP16",
        description: "Duplicate 16th stack item",
        exec_func: exec_funcs.makeDup(16),
        num_pops: 16,
        num_pushes: 17,
    },
    [OPCODES.SWAP1]: {
        name: "SWAP1",
        description: "Exchange 1st and 2nd stack items",
        exec_func: exec_funcs.makeSwap(1),
        num_pops: 2,
        num_pushes: 2,
    },
    [OPCODES.SWAP2]: {
        name: "SWAP2",
        description: "Exchange 1st and 3d stack items",
        exec_func: exec_funcs.makeSwap(2),
        num_pops: 3,
        num_pushes: 3,
    },
    [OPCODES.SWAP3]: {
        name: "SWAP3",
        description: "Exchange 1st and 4th stack items",
        exec_func: exec_funcs.makeSwap(3),
        num_pops: 4,
        num_pushes: 4,
    },
    [OPCODES.SWAP4]: {
        name: "SWAP4",
        description: "Exchange 1st and 5th stack items",
        exec_func: exec_funcs.makeSwap(4),
        num_pops: 5,
        num_pushes: 5,
    },
    [OPCODES.SWAP5]: {
        name: "SWAP5",
        description: "Exchange 1st and 6th stack items",
        exec_func: exec_funcs.makeSwap(5),
        num_pops: 6,
        num_pushes: 6,
    },
    [OPCODES.SWAP6]: {
        name: "SWAP6",
        description: "Exchange 1st and 7th stack items",
        exec_func: exec_funcs.makeSwap(6),
        num_pops: 7,
        num_pushes: 7,
    },
    [OPCODES.SWAP7]: {
        name: "SWAP7",
        description: "Exchange 1st and 8th stack items",
        exec_func: exec_funcs.makeSwap(7),
        num_pops: 8,
        num_pushes: 8,
    },
    [OPCODES.SWAP8]: {
        name: "SWAP8",
        description: "Exchange 1st and 9th stack items",
        exec_func: exec_funcs.makeSwap(8),
        num_pops: 9,
        num_pushes: 9,
    },
    [OPCODES.SWAP9]: {
        name: "SWAP9",
        description: "Exchange 1st and 10th stack items",
        exec_func: exec_funcs.makeSwap(9),
        num_pops: 10,
        num_pushes: 10,
    },
    [OPCODES.SWAP10]: {
        name: "SWAP10",
        description: "Exchange 1st and 11th stack items",
        exec_func: exec_funcs.makeSwap(10),
        num_pops: 11,
        num_pushes: 11,
    },
    [OPCODES.SWAP11]: {
        name: "SWAP11",
        description: "Exchange 1st and 12th stack items",
        exec_func: exec_funcs.makeSwap(11),
        num_pops: 12,
        num_pushes: 12,
    },
    [OPCODES.SWAP12]: {
        name: "SWAP12",
        description: "Exchange 1st and 13th stack items",
        exec_func: exec_funcs.makeSwap(12),
        num_pops: 13,
        num_pushes: 13,
    },
    [OPCODES.SWAP13]: {
        name: "SWAP13",
        description: "Exchange 1st and 14th stack items",
        exec_func: exec_funcs.makeSwap(13),
        num_pops: 14,
        num_pushes: 14,
    },
    [OPCODES.SWAP14]: {
        name: "SWAP14",
        description: "Exchange 1st and 15th stack items",
        exec_func: exec_funcs.makeSwap(14),
        num_pops: 15,
        num_pushes: 15,
    },
    [OPCODES.SWAP15]: {
        name: "SWAP15",
        description: "Exchange 1st and 16th stack items",
        exec_func: exec_funcs.makeSwap(15),
        num_pops: 16,
        num_pushes: 16,
    },
    [OPCODES.SWAP16]: {
        name: "SWAP16",
        description: "Exchange 1st and 17th stack items",
        exec_func: exec_funcs.makeSwap(16),
        num_pops: 17,
        num_pushes: 17,
    },

    // 0xa0 range - logging ops.
    [OPCODES.LOG0]: {
        name: "LOG0",
        description: "Append log record with no topics",
        exec_func: exec_funcs.makeLog(0),
        num_pops: 2,
        num_pushes: 0,

        writes: true,
    },
    [OPCODES.LOG1]: {
        name: "LOG1",
        description: "Append log record with 1 topic",
        exec_func: exec_funcs.makeLog(1),
        num_pops: 3,
        num_pushes: 0,

        writes: true,
    },
    [OPCODES.LOG2]: {
        name: "LOG2",
        description: "Append log record with 2 topics",
        exec_func: exec_funcs.makeLog(2),
        num_pops: 4,
        num_pushes: 0,

        writes: true,
    },
    [OPCODES.LOG3]: {
        name: "LOG3",
        description: "Append log record with 3 topics",
        exec_func: exec_funcs.makeLog(3),
        num_pops: 5,
        num_pushes: 0,

        writes: true,
    },
    [OPCODES.LOG4]: {
        name: "LOG4",
        description: "Append log record with 4 topics",
        exec_func: exec_funcs.makeLog(4),
        num_pops: 6,
        num_pushes: 0,

        writes: true,
    },

    // 0xf0 range - System operations.
    [OPCODES.CREATE]: {
        name: "CREATE",
        description: "Create a new account with associated code",
        exec_func: exec_funcs.CREATE,
        num_pops: 3,
        num_pushes: 1,

        writes: true,
        returns: true,
    },
    [OPCODES.CALL]: {
        name: "CALL",
        description: "Message-call into an account",
        exec_func: exec_funcs.CALL,
        num_pops: 7,
        num_pushes: 1,

        returns: true,
    },
    [OPCODES.CALLCODE]: {
        name: "CALLCODE",
        description: "Message-call into this account with an alternative account's code",
        exec_func: exec_funcs.CALLCODE,
        num_pops: 7,
        num_pushes: 1,

        returns: true,
    },
    [OPCODES.RETURN]: {
        name: "RETURN",
        description: "Halt execution returning output data",
        exec_func: exec_funcs.RETURN,
        num_pops: 2,
        num_pushes: 0,

        halts: true,
    },
    [OPCODES.DELEGATECALL]: {
        name: "DELEGATECALL",
        description: "Message-call into this account with an alternative account's code, but persisting the current values for sender and value",
        exec_func: exec_funcs.DELEGATECALL,
        num_pops: 6,
        num_pushes: 1,
    },
    [OPCODES.CREATE2]: {
        name: "CREATE2",
        description: "Create a new account with associated code",
        exec_func: exec_funcs.CREATE2,
        num_pops: 4,
        num_pushes: 1,

        writes: true,
        returns: true,
    },
    [OPCODES.STATICCALL]: {
        name: "STATICCALL",
        description: "Static message-call into an account",
        exec_func: exec_funcs.STATICCALL,
        num_pops: 6,
        num_pushes: 1,
    },
    [OPCODES.REVERT]: {
        name: "REVERT",
        description: "Halt execution reverting state changes but returning data and remaining gas",
        exec_func: exec_funcs.REVERT,
        num_pops: 2,
        num_pushes: 0,

        reverts: true,
        returns: true,
    },
    [OPCODES.INVALID]: {
        name: "INVALID",
        description: "Designated invalid instruction",
        exec_func: exec_funcs.INVALID,
        num_pops: 0,
        num_pushes: 0,
    },
    [OPCODES.SELFDESTRUCT]: {
        name: "SELFDESTRUCT",
        description: "Halt execution and register account for later deletion",
        exec_func: exec_funcs.SELFDESTRUCT,
        num_pops: 1,
        num_pushes: 0,

        halts: true,
        writes: true,
    },
}